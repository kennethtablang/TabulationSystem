@model TabulationSystem.Models.ViewModels.EventAssignmentViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Event Assignment";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>List of Judges</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Dashboard", "Index")">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Manage User</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>List of Judges</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2 text-right">
        <a asp-action="RegisterJudge" class="btn btn-primary btn-sm float-right mt-3">
            <i class="fa fa-plus"></i> Register New Judge
        </a>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>List of Judges</h5>
                </div>
                <div class="ibox-content">
                    <table class="table table-striped table-bordered" id="eventAssignmentTable">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Judge Name</th>
                                <th>Assigned Event</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.JudgeAssignments)
                            {
                                <tr>
                                    <td>@item.UserId</td>
                                    <td>@item.FullName</td>
                                    <td>@item.EventName</td>
                                    <td>
                                        <!-- Assign Event Button -->
                                        <button class="btn btn-primary btn-sm"
                                                data-userid="@item.UserId"
                                                data-username="@item.FullName"
                                                data-toggle="modal"
                                                data-target="#assignEventModal">
                                            <i class="fa fa-plus"></i> Assign Event
                                        </button>

                                        <!-- Edit Judge Button -->
                                        <button type="button" class="btn btn-warning btn-sm"
                                                onclick="openEditJudgeModal(this)"
                                                data-id="@item.UserId"
                                                data-firstname="@item.FirstName"
                                                data-middlename="@item.MiddleName"
                                                data-lastname="@item.LastName"
                                                data-email="@item.Email">
                                            <i class="fa fa-edit"></i> Edit
                                        </button>
                                        <!-- Delete Judge Button -->
                                        <button class="btn btn-danger btn-sm delete-judge" data-id="@item.UserId">
                                            <i class="fa fa-trash"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Assign Event Modal -->
<div class="modal fade" id="assignEventModal" tabindex="-1" role="dialog" aria-labelledby="assignEventModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="assignEventModalLabel">Assign Event</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="assignEventForm">
                    @Html.AntiForgeryToken()
                    <!-- Use hidden inputs to ensure the data is submitted -->
                    <input type="hidden" id="UserId" name="UserId" />
                    <input type="hidden" id="UserName" name="UserName" />

                    <!-- Display Judge Name for reference -->
                    <div class="form-group">
                        <label>Judge Name</label>
                        <p id="displayUserName" class="form-control-static"></p>
                    </div>

                    <div class="form-group">
                        <label>Event</label>
                        <select id="EventId" name="EventId" class="form-control" required>
                            <option value="">-- Select Event --</option>
                            @foreach (var eventItem in Model.Events ?? Enumerable.Empty<SelectListItem>())
                            {
                                <option value="@eventItem.Value">@eventItem.Text</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="assignEvent()">Assign</button>
            </div>
        </div>
    </div>
</div>




<!-- Edit Judge Modal -->
<div class="modal fade" id="editJudgeModal" tabindex="-1" role="dialog" aria-labelledby="editJudgeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="editJudgeModalLabel">Edit Judge</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editJudgeForm">
                    <input type="hidden" id="JudgeUserId" name="UserId" />
                    <div class="form-group">
                        <label for="FirstName">First Name</label>
                        <input type="text" class="form-control" id="FirstName" name="FirstName" required />
                    </div>
                    <div class="form-group">
                        <label for="MiddleName">Middle Name</label>
                        <input type="text" class="form-control" id="MiddleName" name="MiddleName" />
                    </div>
                    <div class="form-group">
                        <label for="LastName">Last Name</label>
                        <input type="text" class="form-control" id="LastName" name="LastName" required />
                    </div>
                    <div class="form-group">
                        <label for="Email">Email Address</label>
                        <input type="email" class="form-control" id="Email" name="Email" required />
                    </div>
                    <!-- New Password Reset Fields -->
                    <div class="form-group">
                        <label for="NewPassword">New Password</label>
                        <input type="password" class="form-control" id="NewPassword" name="NewPassword" placeholder="Enter new password" />
                    </div>
                    <div class="form-group">
                        <label for="ConfirmNewPassword">Confirm New Password</label>
                        <input type="password" class="form-control" id="ConfirmNewPassword" name="ConfirmNewPassword" placeholder="Confirm new password" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveJudgeChanges()">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/lib/dataTables/datatables.min.css" />
    <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
    <link rel="stylesheet" href="~/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css" />
    <link rel="stylesheet" href="~/lib/sweetalert/dist/sweetalert.css" />
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/dataTables/dataTables.buttons.min.js"></script>
        <script src="~/lib/dataTables/buttons.html5.min.js"></script>
        <script src="~/lib/dataTables/buttons.print.min.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
        <script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    </environment>

    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">
        $(document).ready(function () {
            // Initialize DataTable for the event assignment table if needed.
            $('#eventAssignmentTable').DataTable();

            // Bind click event for opening the assign event modal via function (alternative approach)
             window.openAssignModal = function(userId, userName) {
                 console.log("openAssignModal called with:", userId, userName);
                $('#UserId').val(userId);
                $('#UserName').val(userName);
                $('#displayUserName').text(userName);
                $('#assignEventModal').modal('show');
            }

            // When the assignEventModal is shown, populate hidden fields from the triggering element.
            $('#assignEventModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // The button that triggered the modal
                var userId = button.data('userid');   // Ensure your button has data-userid attribute
                var userName = button.data('username'); // Ensure your button has data-username attribute

                var modal = $(this);
                modal.find('#UserId').val(userId);
                modal.find('#UserName').val(userName);
            });

            // Function to assign event via AJAX
            function assignEvent() {
                console.log("Assign button clicked.");
                var formData = $("#assignEventForm").serialize();
                console.log("Form Data:", formData);

                $.ajax({
                    url: '/ManageUser/AssignEvent',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        console.log("AJAX Response:", response);
                        if (response.success) {
                            $("#assignEventModal").modal("hide");
                            // Use Swal.fire for SweetAlert2
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: response.message
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("AJAX Error:", xhr.responseText);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while assigning the event.'
                        });
                    }
                });
            }

            // Expose assignEvent to the global scope if needed (or attach it to a button's onclick)
            window.assignEvent = assignEvent;

            // Register Judge function for judge registration
            function registerJudge() {
                var formData = $('#registerJudgeForm').serialize();
                $.ajax({
                    url: '@Url.Action("RegisterJudge", "ManageUser")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            alert('Judge registered successfully!');
                            window.location.href = '@Url.Action("Judge", "ManageUser")';
                        } else {
                            alert(response.message);
                        }
                    }
                });
            }
            window.registerJudge = registerJudge;

            // Open Edit Judge Modal
            function openEditJudgeModal(button) {
                var $button = $(button);
                var userId = $button.data('id');
                var firstName = $button.data('firstname');
                var middleName = $button.data('middlename');
                var lastName = $button.data('lastname');
                var email = $button.data('email');

                $('#JudgeUserId').val(userId);
                $('#FirstName').val(firstName);
                $('#MiddleName').val(middleName);
                $('#LastName').val(lastName);
                $('#Email').val(email);
                $('#editJudgeModal').modal('show');
            }
            window.openEditJudgeModal = openEditJudgeModal;

            // Save Judge Changes via AJAX
            function saveJudgeChanges() {
                var formData = $('#editJudgeForm').serialize();
                $.ajax({
                    url: '@Url.Action("EditJudge", "ManageUser")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if(response.success) {
                            Swal.fire("Success", "Judge updated successfully", "success");
                            $('#editJudgeModal').modal('hide');
                            location.reload();
                        } else {
                            Swal.fire("Error", "Failed to update judge", "error");
                        }
                    }
                });
            }
            window.saveJudgeChanges = saveJudgeChanges;

            // Delete judge using SweetAlert2
            $('.delete-judge').click(function(e) {
                e.preventDefault();
                var judgeId = $(this).data('id');
                Swal.fire({
                    title: "Are you sure?",
                    text: "This judge will be deleted permanently.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '@Url.Action("DeleteJudge", "ManageUser")/' + judgeId;
                    } else {
                        Swal.fire("Cancelled", "The judge is safe :)", "error");
                    }
                });
            });
        });
    </script>
}
