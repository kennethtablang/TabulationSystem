@model IEnumerable<TabulationSystem.Models.ViewModels.EventCategoryViewModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "List of Event Categories";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Event Categories</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Dashboard", "Home")">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Event Category</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>List of Event Categories</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
        <a asp-action="CreateEventCategory" class="btn btn-primary btn-sm float-right mt-3">
            <i class="fa fa-plus"></i> Create New Category
        </a>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Event Categories <small> View all defined categories for events.</small></h5>
                </div>
                <div class="ibox-content">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="tblEventCategory">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Event</th>
                                    <th>Category Name</th>
                                    <th>Description</th>
                                    <th>Score Type</th>
                                    <th>Percentage</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.EventCategoryId</td>
                                        <td>@item.EventName</td>
                                        <td>@item.CategoryName</td>
                                        <td>@item.Description</td>
                                        <td>@item.ScoreType.ToString()</td>
                                        <td>@item.CategoryPercentage.ToString()</td>
                                        <td>
                                            <button class="btn btn-sm btn-primary"
                                                    data-toggle="modal"
                                                    data-target="#editModal"
                                                    data-id="@item.EventCategoryId"
                                                    data-name="@item.CategoryName"
                                                    data-description="@item.Description"
                                                    data-score-type="@item.ScoreType"
                                                    data-percentage="@item.CategoryPercentage"
                                                    data-event-id="@item.EventId">
                                                <i class="fa fa-edit"></i> Edit
                                            </button>

                                            <button class="btn btn-info btn-sm btn-details"
                                                    data-id="@item.EventCategoryId"
                                                    data-toggle="modal"
                                                    data-target="#detailsModal">
                                                <i class="fa fa-eye"></i> Details
                                            </button>

                                            <button class="btn btn-danger btn-sm btn-delete"
                                                    data-id="@item.EventCategoryId">
                                                <i class="fa fa-trash"></i> Delete
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Edit Event Category</h3>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <form id="editCategoryForm" action="/EventCategory/EditEventCategory" method="post">
                <div class="modal-body">
                    <input type="hidden" id="EventCategoryId" name="EventCategoryId" />

                    <div class="form-group">
                        <label for="EventId">Select Event</label>
                        <select id="EventId" name="EventId" class="form-control"></select>
                    </div>

                    <div class="form-group">
                        <label for="CategoryName">Category Name</label>
                        <input type="text" id="CategoryName" name="CategoryName" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="Description">Description</label>
                        <textarea id="Description" name="Description" class="form-control"></textarea>
                    </div>

                    <div class="form-group">
                        <label for="ScoreType">Score Type</label>
                        <select id="ScoreType" name="ScoreType" class="form-control">
                            <option value="Percentage">Percentage</option>
                            <option value="Rank">Rank</option>
                            <option value="Point">Point</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="CategoryPercentage">Category Percentage</label>
                        <input type="number" id="CategoryPercentage" name="CategoryPercentage" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-save"></i> Save Changes
                    </button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">
                        <i class="fa fa-times"></i> Close
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Event Category Details</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="DetailsEventCategoryId" />

                <div class="form-group">
                    <label>Event Name</label>
                    <input type="text" id="DetailsEventName" class="form-control" readonly />
                </div>

                <div class="form-group">
                    <label>Category Name</label>
                    <input type="text" id="DetailsCategoryName" class="form-control" readonly />
                </div>

                <div class="form-group">
                    <label>Description</label>
                    <textarea id="DetailsDescription" class="form-control" readonly></textarea>
                </div>

                <div class="form-group">
                    <label>Score Type</label>
                    <input type="text" id="DetailsScoreType" class="form-control" readonly />
                </div>

                <div class="form-group">
                    <label>Category Percentage</label>
                    <input type="text" id="DetailsCategoryPercentage" class="form-control" readonly />
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" onclick="deleteCategory()">
                    <i class="fa fa-trash"></i> Delete
                </button>
                <button class="btn btn-warning" onclick="openEditModal()">
                    <i class="fa fa-edit"></i> Edit
                </button>
                <button class="btn btn-secondary" data-dismiss="modal">
                    <i class="fa fa-times"></i> Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/lib/dataTables/datatables.min.css" />
    <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
    <link rel="stylesheet" href="~/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css" />
    <link rel="stylesheet" href="~/lib/sweetalert/dist/sweetalert.css" />
}

@section Scripts {
    <environment names="Development">
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
        <script src="~/lib/sweetalert/dist/sweetalert-dev.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
        <script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    </environment>

    @* this is the script for the EventCategory/Index.cshtml *@
    <script type="text/javascript">
        $(document).ready(function () {

            $('#tblEventCategory').DataTable({
                processing: true,
                serverSide: false,
                columns: [
                    { data: "eventCategoryId" },
                    { data: "eventName" },
                    { data: "categoryName" },
                    { data: "description" },
                    { data: "scoreType" },
                    { data: "categoryPercentage" },
                    { data: "actions", orderable: false } // Ensure action buttons are included
                ]
            });

            // this is arguments for the edit modal
            $("#editCategoryForm").submit(function (e) {
                e.preventDefault();

                var formData = $(this).serialize();

                $.ajax({
                    url: $(this).attr("action"),
                    type: "POST",
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            // Close the modal
                            $("#editModal").modal("hide");

                            // Update the DataTable row manually using the updated data
                            var table = $('#tblEventCategory').DataTable();
                            var row = table.row($("button[data-id='" + response.data.eventCategoryId + "']").parents('tr'));

                            row.data({
                                eventCategoryId: response.data.eventCategoryId,
                                eventName: response.data.eventName,
                                categoryName: response.data.categoryName,
                                description: response.data.description || 'None',  // Display "None" if empty
                                scoreType: response.data.scoreType,
                                categoryPercentage: response.data.categoryPercentage + '%',
                                actions: `
                                    <button class="btn btn-sm btn-primary"
                                            data-toggle="modal"
                                            data-target="#editModal"
                                            data-id="${response.data.eventCategoryId}"
                                            data-name="${response.data.categoryName}"
                                            data-description="${response.data.description}"
                                            data-score-type="${response.data.scoreType}"
                                            data-percentage="${response.data.categoryPercentage}"
                                            data-event-id="${response.data.eventId}">
                                        <i class="fa fa-edit"></i> Edit
                                    </button>

                                    <button class="btn btn-info btn-sm btn-details"
                                            data-id="${response.data.eventCategoryId}"
                                            data-toggle="modal"
                                            data-target="#detailsModal">
                                        <i class="fa fa-eye"></i> Details
                                    </button>

                                    <button class="btn btn-danger btn-sm btn-delete"
                                            data-id="${response.data.eventCategoryId}">
                                        <i class="fa fa-trash"></i> Delete
                                    </button>`
                            }).draw();

                            // Show success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: response.message
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            // Show error message
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Something went wrong. Please try again.'
                        });
                    }
                });
            });
        });

        $(document).ready(function () {
            // Initialize DataTable
            $('#tblEventCategory').DataTable();

            // Load Edit Modal
            $('#editModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var eventCategoryId = button.data('id');

                // Clear existing options
                $('#EventId').empty();
                $('#EventId').append('<option value="">-- Select Event --</option>');

                // Fetch events via AJAX
                $.ajax({
                    url: '/ManageEvent/GetEvents',
                    type: 'GET',
                    success: function (data) {
                        $.each(data, function (index, item) {
                            $('#EventId').append('<option value="' + item.eventId + '">' + item.eventName + '</option>');
                        });

                        // If you're opening this for edit, preselect the event
                        var selectedEventId = button.data('event-id');
                        if (selectedEventId) {
                            $('#EventId').val(selectedEventId);
                        }
                    }
                });

                // Populate other form fields based on the button's data
                $('#EventCategoryId').val(eventCategoryId);
                $('#CategoryName').val(button.data('name'));
                $('#Description').val(button.data('description'));
                $('#ScoreType').val(button.data('score-type'));
                $('#CategoryPercentage').val(button.data('percentage'));
            });

            // Load Details Modal
            $('.btn-details').click(function () {
                var id = $(this).data('id');
                $.ajax({
                    url: '/EventCategory/GetCategoryById/' + id,
                    type: 'GET',
                    success: function (data) {
                        // Populate the modal fields
                        $('#DetailsEventCategoryId').val(data.eventCategoryId);
                        $('#DetailsEventName').val(data.eventName);
                        $('#DetailsCategoryName').val(data.categoryName);
                        $('#DetailsDescription').val(data.description);
                        $('#DetailsScoreType').val(data.scoreType);
                        $('#DetailsCategoryPercentage').val(data.categoryPercentage);

                        // Open the modal
                        $('#detailsModal').modal('show');
                    }
                });
            });

            // Delete Confirmation
            $('.btn-delete').click(function () {
                var id = $(this).data('id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/EventCategory/Delete/' + id;
                    }
                });
            });

            // Initialize iCheck
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
        });
    </script>
}
