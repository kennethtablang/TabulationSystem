@model TabulationSystem.Models.ViewModels.LiveResultsViewModel
@{
    Layout = "~/Views/Shared/_Layout_2.cshtml";
    ViewData["Title"] = "Live Results";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Live Results</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("JudgeDashboard", "Index")">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Scoring and Results</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Live Results</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
        <a asp-action="EnterScores" class="btn btn-primary btn-sm float-right mt-3"><i class="fa fa-plus"></i> Enter Scores</a>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <!-- Candidate Scores Table -->
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Candidate Scores</h5>
                </div>
                <div class="ibox-content">
                    <table class="table table-striped table-bordered" id="liveResultsTable">
                        <thead>
                            <tr>
                                <th>Rank</th>
                                <th>Candidate Name</th>
                                <th>Score</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Candidates != null && Model.Candidates.Any())
                            {
                                foreach (var candidate in Model.Candidates)
                                {
                                    <tr data-candidate-id="@candidate.CandidateId">
                                        <td class="rank">@candidate.Rank</td>
                                        <td>@candidate.FullName</td>
                                        <td class="score">@candidate.Score</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="3" class="text-center">No candidates available.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Include SignalR client script (adjust path if necessary) -->
    <script src="~/lib/signalr/signalr.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            // Create a connection to the SignalR hub
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/scoreHub") // Adjust the hub URL as needed
                .build();

            // Define a function that updates the table when new score data arrives
            connection.on("ReceiveScoreUpdate", function (candidateId, newScore, newRank) {
                var row = $('tr[data-candidate-id="' + candidateId + '"]');
                row.find('.score').text(newScore);
                row.find('.rank').text(newRank);
            });

            // Start the connection
            connection.start().catch(function (err) {
                return console.error(err.toString());
            });
        });
    </script>
}