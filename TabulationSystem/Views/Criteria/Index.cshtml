@model IEnumerable<TabulationSystem.Models.ViewModels.CriteriaViewModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "List of Criteria";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Criteria List</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Dashboard", "Index")">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Criteria</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Criteria List</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
        <a asp-action="CreateCriteria" class="btn btn-primary btn-sm float-right mt-3">
            <i class="fa fa-plus"></i> Create New Criteria
        </a>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Criteria List <small> View all defined criteria for events.</small></h5>
                </div>
                <div class="ibox-content">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="tblCriteria">
                            <thead>
                                <tr>
                                    <th>Category Name</th>
                                    <th>Id</th>
                                    <th>Criteria Name</th>
                                    <th>Percentage</th>
                                    <th>Description</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var category in Model.GroupBy(c => c.CategoryName))
                                {
                                    bool firstRow = true;
                                    foreach (var item in category)
                                    {
                                        <tr>
                                            @if (firstRow)
                                            {
                                                <td rowspan="@category.Count()">@category.Key</td>
                                                firstRow = false;
                                            }
                                            <td>@item.CriteriaId</td>
                                            <td>@item.CriteriaName</td>
                                            <td>@item.Percentage%</td>
                                            <td>@item.Description</td>
                                            <td>
                                                <button class="btn btn-sm btn-primary"
                                                        data-toggle="modal"
                                                        data-target="#editModal"
                                                        data-id="@item.CriteriaId"
                                                        data-name="@item.CriteriaName"
                                                        data-percentage="@item.Percentage"
                                                        data-description="@item.Description"
                                                        data-event-category-id="@item.EventCategoryId">

                                                    <i class="fa fa-edit"></i> Edit
                                                </button>

                                                <button class="btn btn-info btn-sm btn-details"
                                                        data-toggle="modal"
                                                        data-target="#detailsModal"
                                                        data-id="@item.CriteriaId">
                                                    <i class="fa fa-eye"></i> Details
                                                </button>

                                                <button class="btn btn-danger btn-sm btn-delete"
                                                        data-id="@item.CriteriaId">
                                                    <i class="fa fa-trash"></i> Delete
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Edit Criteria</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="editCriteriaForm" action="/Criteria/EditCriteria" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="CriteriaId" name="CriteriaId" />

                    <div class="form-group">
                        <label for="CategoryId">Select Category</label>
                        <select id="CategoryId" name="EventCategoryId" class="form-control"></select>
                        <input type="hidden" id="CategoryName" name="CategoryName" />
                    </div>

                    <div class="form-group">
                        <label for="CriteriaName">Criteria Name</label>
                        <input type="text" id="CriteriaName" name="CriteriaName" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="Description">Description</label>
                        <textarea id="Description" name="Description" class="form-control"></textarea>
                    </div>

                    <div class="form-group">
                        <label for="Percentage">Percentage</label>
                        <input type="number" id="Percentage" name="Percentage" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-save"></i> Save Changes
                    </button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">
                        <i class="fa fa-times"></i> Close
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Event Criteria Details</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="DetailsCriteriaId" />

                <div class="form-group">
                    <label>Category Name</label>
                    <input type="text" id="DetailsCategoryName" class="form-control" readonly />
                </div>

                <div class="form-group">
                    <label>Criteria Name</label>
                    <input type="text" id="DetailsCriteriaName" class="form-control" readonly />
                </div>

                <div class="form-group">
                    <label>Description</label>
                    <textarea id="DetailsDescription" class="form-control" readonly></textarea>
                </div>

                <div class="form-group">
                    <label>Percentage</label>
                    <input type="text" id="DetailsPercentage" class="form-control" readonly />
                </div>

            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" onclick="deleteCriteria()">
                    <i class="fa fa-trash"></i> Delete
                </button>
                <button class="btn btn-warning" onclick="openEditModal()">
                    <i class="fa fa-edit"></i> Edit
                </button>
                <button class="btn btn-secondary" data-dismiss="modal">
                    <i class="fa fa-times"></i> Close
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this criteria?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/lib/dataTables/datatables.min.css" />
    <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
    <link rel="stylesheet" href="~/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css" />
    <link rel="stylesheet" href="~/lib/sweetalert/dist/sweetalert.css" />
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/dataTables/dataTables.buttons.min.js"></script>
        <script src="~/lib/dataTables/buttons.html5.min.js"></script>
        <script src="~/lib/dataTables/buttons.print.min.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
        <script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    </environment>

    @* this is the script for the EventCategory/Index.cshtml *@
    <script type="text/javascript">
        $(document).ready(function () {
            // Initialize DataTable for the Criteria list (table id is tblCriteria)
            $('#tblCriteria').DataTable({
                processing: true,
                serverSide: false,
                columns: [
                    { data: "categoryName" },        // Grouped Category Name
                    { data: "criteriaId" },          // Criteria Id
                    { data: "criteriaName" },        // Criteria Name
                    { data: "percentage" },          // Percentage value
                    { data: "description" },         // Description
                    { data: "actions", orderable: false } // Action buttons column
                ]
            });

            // Update hidden CategoryName input when category dropdown changes
            $('#CategoryId').on('change', function() {
                var selectedText = $(this).find('option:selected').text();
                $('#CategoryName').val(selectedText);
            });

            // Also update the hidden input when opening the edit modal
            $('#editModal').on('show.bs.modal', function() {
                var selectedText = $('#CategoryId option:selected').text();
                $('#CategoryName').val(selectedText);
            });

            // Handle submission of the Edit Criteria form (in the modal)
            $("#editCriteriaForm").submit(function (e) {
                e.preventDefault(); // Prevent default form submission

                var formData = $(this).serialize(); // Serialize form data

                $.ajax({
                    url: $(this).attr("action"), // URL defined in the form's action attribute (/Criteria/EditCriteria)
                    type: "POST",
                    data: formData,
                    success: function (response) {
                        console.log("Response:", response); //Debugging

                        if (response.success) {
                            // Close the Edit modal
                            $("#editModal").modal("hide");

                            // Update the DataTable row manually using the updated data returned from the server
                            var table = $('#tblCriteria').DataTable();
                            var row = table.row($("button[data-id='" + response.data.criteriaId + "']").parents('tr'));

                            row.data({
                                categoryName: response.data.categoryName,
                                criteriaId: response.data.criteriaId,
                                criteriaName: response.data.criteriaName,
                                percentage: response.data.percentage + '%',
                                description: response.data.description || 'None',
                                actions: `
                                    <button class="btn btn-sm btn-primary btn-edit"
                                            data-toggle="modal" data-target="#editModal"
                                            data-id="${response.data.criteriaId}"
                                            data-criteria-id="${response.data.criteriaId}"
                                            data-name="${response.data.criteriaName}"
                                            data-description="${response.data.description}"
                                            data-percentage="${response.data.percentage}"
                                            data-event-category-id="${response.data.eventCategoryId}">
                                        <i class="fa fa-edit"></i> Edit
                                    </button>
                                    <button class="btn btn-info btn-sm btn-details"
                                            data-toggle="modal"
                                            data-target="#detailsModal"
                                            data-id="${response.data.criteriaId}">
                                        <i class="fa fa-eye"></i> Details
                                    </button>
                                    <button class="btn btn-danger btn-sm btn-delete"
                                            data-id="${response.data.criteriaId}">
                                        <i class="fa fa-trash"></i> Delete
                                    </button>`
                            }).draw();

                            // Show success message and reload the page if needed
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: response.message
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            // Show error message if update failed
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message
                            });
                        }
                    },
                    error: function () {
                        // Show a generic error if the AJAX call fails
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Something went wrong. Please try again.'
                        });
                    }
                });
            });
        });

        $(document).ready(function () {
            // Initialize DataTable for the Criteria table (assumed table id is tblCriteria)
            $('#tblCriteria').DataTable();



            // Load Edit Modal for Criteria
            // This listens for when the edit modal is shown.
            $('#editModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var criteriaId = button.data('id');

                // Clear existing options from the category dropdown (for Criteria, we assume the category is the event category)
                $('#EventCategoryId').empty();
                $('#CategoryId').append('<option value="">-- Select Category --</option>');

                // Fetch categories via AJAX so that the dropdown is populated
                $.ajax({
                    url: '/EventCategory/GetCategories', // Adjust this URL if your endpoint is different
                    type: 'GET',
                    success: function (data) {
                        $.each(data, function (index, item) {
                            $('#CategoryId').append('<option value="' + item.eventCategoryId + '">' + item.categoryName + '</option>');
                        });
                        // If editing, preselect the category using data attribute from the button
                        var selectedCategoryId = button.data('event-category-id');
                        if (selectedCategoryId) {
                            $('#CategoryId').val(selectedCategoryId);
                        }
                    }
                });

                // Populate other form fields based on the button's data attributes
                $('#CriteriaId').val(criteriaId);
                $('#CriteriaName').val(button.data('name'));
                $('#Description').val(button.data('description'));
                $('#Percentage').val(button.data('percentage'));
            });

            // Load Details Modal for Criteria
            $('.btn-details').click(function () {
                var id = $(this).data('id');
                $.ajax({
                    url: '/Criteria/GetCriteriaById/' + id,
                    type: 'GET',
                    success: function (data) {
                        // Populate the details modal fields
                        $('#DetailsCriteriaId').val(data.criteriaId);
                        $('#DetailsCategoryName').val(data.categoryName);
                        $('#DetailsCriteriaName').val(data.criteriaName);
                        $('#DetailsDescription').val(data.description);
                        $('#DetailsPercentage').val(data.percentage + '%');
                        // Open the details modal
                        $('#detailsModal').modal('show');
                    }
                });
            });

            // Delete Confirmation for Criteria
            $('.btn-delete').click(function () {
                var id = $(this).data('id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/Criteria/Delete/' + id;
                    }
                });
            });

            // Initialize iCheck if needed
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green'
            });
        });
    </script>
}
